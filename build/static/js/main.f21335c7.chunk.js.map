{"version":3,"sources":["base/Modal/Modal.module.scss","base/Header/Header.module.scss","atoms/Pagination/Pagination.module.scss","atoms/SearchInput/SearchInput.module.scss","atoms/ItemRow/ItemRow.module.scss","pages/campaigns/CampaignList.module.scss","pages/employee/EmployeeList.module.scss","base/ItemList/ItemList.module.scss","actions/types.js","reducers/index.js","reducers/campaignReducer.js","reducers/employeeReducer.js","reducers/baseReducer.js","serviceWorker.js","base/Header/Header.js","atoms/SearchInput/SearchInput.js","actions/campaignActions.js","actions/baseAction.js","atoms/ItemRow/ItemRow.js","constants/index.js","base/ItemList/ItemList.js","atoms/Pagination/Pagination.js","pages/campaigns/CampaignList.container.js","api/index.js","actions/employeeAction.js","pages/employee/EmployeeList.container.js","base/Modal/Modal.js","App.js","index.js"],"names":["module","exports","ActionType","rootReducers","combineReducers","campaign","state","action","type","payload","employee","base","Boolean","window","location","hostname","match","Header","history","useHistory","pathname","onRouteChanged","route","push","className","styles","navBar","onClick","selectedNavComponent","navComponent","SearchInput","props","inputContainer","onChange","searchCampaign","searchInput","placeholder","results","totalItems","campaignData","data","getCampaigns","pageNumber","start","end","length","pages","Array","from","Math","ceil","x","i","campaigns","slice","toggleModal","showModal","meta","Column","isHeading","ItemRow","dataType","index","deleteAction","validKeys","dispatch","useDispatch","Object","keys","filter","key","includes","map","actionIcon","icon","faEdit","faTrash","ModalDataType","ItemList","header","totalPages","container","item","title","company","first_name","employees","id","Pagination","selectedPageNumber","pageNumberChange","arrows","faChevronLeft","pageNum","selected","faChevronRight","name","actions","CampaignList","useState","setPageNumber","useEffect","useSelector","campaignContainer","event","target","value","searchText","searchedCampaigns","toLowerCase","searchCampaigns","dataIndex","splice","deleteCampaign","BASE_URL","Api","url","this","_xhr","body","method","Promise","res","rej","fetch","then","r","status","json","catch","e","setEmployees","EmployeeList","get","total_pages","error","console","log","getEmployees","employeeContainer","employeeId","updatedEmployees","pagesLength","userId","delete","deleteEmployee","Modal","input","setInput","role","modalWrapper","stopPropagation","modal","defaultValue","actionsContainer","cancelButton","saveButton","updatedEmployee","updatedCompany","find","put","App","exact","to","path","component","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f21335c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"Modal_modalWrapper__25fUa\",\"modal\":\"Modal_modal__22rEy\",\"input\":\"Modal_input__hAheh\",\"actionsContainer\":\"Modal_actionsContainer__2x4qA\",\"saveButton\":\"Modal_saveButton__3T8aS\",\"cancelButton\":\"Modal_cancelButton__1QH_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"Header_navBar__lfZ6_\",\"navComponent\":\"Header_navComponent__2mJRh\",\"selectedNavComponent\":\"Header_selectedNavComponent__1tQ2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pagination_container__19Je7\",\"arrows\":\"Pagination_arrows__1h-3q\",\"selected\":\"Pagination_selected__nRYDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"SearchInput_inputContainer__1CVK7\",\"searchInput\":\"SearchInput_searchInput__3ruYN\",\"results\":\"SearchInput_results__2lIoG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ItemRow_title__3Su_C\",\"actionIcon\":\"ItemRow_actionIcon__24jbY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CampaignList_container__3lPKM\",\"campaignContainer\":\"CampaignList_campaignContainer__1lF4t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EmployeeList_container__32e5K\",\"employeeContainer\":\"EmployeeList_employeeContainer__39ozS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ItemList_container__3IiF8\"};","export const ActionType = {\n  CAMPAIGN_DETAILS: \"campaign_details\",\n  EMPLOYEE_DETAILS: \"employee_details\",\n  SHOW_MODAL: \"show_modal\",\n};\n","import { combineReducers } from \"redux\";\nimport campaignReducer from \"./campaignReducer\";\nimport employeeReducer from \"./employeeReducer\";\nimport baseReducer from \"./baseReducer\";\n\nconst rootReducers = combineReducers({\n  campaign: campaignReducer,\n  employee: employeeReducer,\n  base: baseReducer,\n});\n\nexport default rootReducers;\n","import { ActionType } from \"../actions/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case ActionType.CAMPAIGN_DETAILS:\n      return {\n        ...state,\n        payload: action.payload\n      }\n\n    default:\n      return state;\n  }\n}\n","import {ActionType} from \"../actions/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case ActionType.EMPLOYEE_DETAILS:\n      return {\n        ...state,\n        payload: action.payload\n      }\n\n    default:\n      return state;\n  }\n}\n","import {ActionType} from \"../actions/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case ActionType.SHOW_MODAL:\n      return {\n        ...state,\n        payload: { ...action.payload },\n      }\n\n    default:\n      return state;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport styles from './Header.module.scss';\nimport {useHistory} from \"react-router\";\n\nconst Header = () => {\n  const history = useHistory();\n  const location = history.location.pathname;\n  const onRouteChanged = (route) => {\n    if (location === route) return;\n    history.push(route);\n  }\n  return (\n      <nav className={styles.navBar}>\n        <span onClick={() => onRouteChanged(\"/campaign\")} className={location === \"/campaign\" ? styles.selectedNavComponent : styles.navComponent}>\n          Campaigns\n        </span>\n        <span onClick={() => onRouteChanged(\"/employee\")} className={location === \"/employee\" ? styles.selectedNavComponent : styles.navComponent}>\n          Employees\n        </span>\n      </nav>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport styles from \"./SearchInput.module.scss\";\n\nconst SearchInput = (props) => {\n  return (\n      <div className={styles.inputContainer}>\n        <input onChange={props.searchCampaign} className={styles.searchInput} placeholder={'Search by campaign name...'} />\n        <span className={styles.results}>{props.totalItems}</span>\n      </div>\n  );\n}\n\nexport default SearchInput;\n","import data from '../data.json';\nimport {ActionType} from \"./types\";\n\nconst campaignData = [...data];\n\nexport const getCampaigns = (pageNumber) => {\n  const start = (pageNumber - 1) * 10;\n  const end = start + 10;\n  const totalItems = campaignData.length;\n  const pages = Array.from({length: Math.ceil(totalItems / 10)}, (x, i) => i + 1);\n  return {\n    type: ActionType.CAMPAIGN_DETAILS,\n    payload: {\n      campaigns: campaignData.slice(start, end),\n      totalItems: totalItems + \" items\",\n      pages,\n    }\n  }\n}\n\nexport const deleteCampaign = (pageNumber, index) => {\n  const dataIndex = (index) * pageNumber;\n  campaignData.splice(dataIndex, 1);\n  return getCampaigns(pageNumber);\n}\n\nexport const updateCampaign = (pageNumber, index, updatedCompany) => {\n  const dataIndex = (index) * pageNumber;\n  campaignData[dataIndex].company = updatedCompany;\n  return getCampaigns(pageNumber);\n}\n\nexport const searchCampaigns = (searchText) => {\n  const searchedCampaigns = campaignData.filter((data) => data.company.toLowerCase().includes(searchText.toLowerCase()));\n  const totalItems = searchedCampaigns.length;\n  const pages = Array.from({length: Math.ceil(totalItems / 10)}, (x, i) => i + 1);\n  return {\n    type: ActionType.CAMPAIGN_DETAILS,\n    payload: {\n      campaigns: searchedCampaigns.slice(0, 10),\n      totalItems: totalItems + \" items\",\n      pages,\n    }\n  }\n}\n","import {ActionType} from \"./types\";\n\nexport const toggleModal = (showModal, type, meta) => {\n  return {\n    type: ActionType.SHOW_MODAL,\n    payload: {\n      showModal,\n      type,\n      meta,\n    }\n  };\n}\n","import React, {Fragment} from \"react\";\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styles from \"./ItemRow.module.scss\";\nimport {toggleModal} from \"../../actions/baseAction\";\nimport {useDispatch} from \"react-redux\";\n\nconst ItemRow = (props) => {\n  const { data, type, dataType, pageNumber, index, deleteAction, meta, validKeys } = props;\n  const dispatch = useDispatch();\n\n  const isHeading = type === \"Heading\";\n  return (\n      <tr>\n        {Object.keys(data).filter(key => validKeys?.includes(key)).map((key) => <Column data={data[key]} isHeading={isHeading} />)}\n        {isHeading ? null :\n            <td>\n              <FontAwesomeIcon onClick={() => dispatch(toggleModal(true, dataType, meta))} className={styles.actionIcon} icon={faEdit} />\n              <FontAwesomeIcon onClick={() => deleteAction(pageNumber, index)} className={styles.actionIcon} icon={faTrash} />\n            </td>}\n      </tr>\n  );\n}\n\nconst Column = (props) => {\n  const { isHeading, data } = props;\n  return (\n      <Fragment>\n        {isHeading ? <th>{data}</th> : <td>{data}</td>}\n      </Fragment>\n  );\n}\n\nexport default ItemRow;\n","export const ModalDataType = {\n  CAMPAIGN: \"CAMPAIGN\",\n  EMPLOYEE: \"EMPLOYEE\",\n}\n","import React from \"react\";\nimport ItemRow from \"../../atoms/ItemRow\";\nimport styles from \"./ItemList.module.scss\";\nimport {ModalDataType} from \"../../constants\";\n\nconst ItemList = (props) => {\n  const { payload, pageNumber, header, deleteAction, dataType, validKeys, totalPages } = props;\n  if (payload && payload.length) {\n    return (\n        <table className={styles.container}>\n          <ItemRow type={\"Heading\"} data={header} validKeys={validKeys} />\n          {payload.map((item, index) => {\n            return (\n                <ItemRow\n                    index={index}\n                    pageNumber={pageNumber}\n                    key={item['_id']}\n                    type={\"Data\"}\n                    data={item}\n                    validKeys={validKeys}\n                    dataType={dataType}\n                    meta={{title: dataType === ModalDataType.CAMPAIGN ? item.company : item.first_name, index, employees: payload, pageNumber, totalPages, id: item.id}}\n                    deleteAction={deleteAction}\n                />\n            );\n          })}\n        </table>\n    );\n  }\n  return null;\n}\n\nexport default ItemList;\n","import React from \"react\";\nimport { faChevronRight, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styles from \"./Pagination.module.scss\";\n\nconst Pagination = (props) => {\n  return (\n      <div className={styles.container}>\n        <FontAwesomeIcon\n            onClick={() => {\n              if (props.selectedPageNumber > 1) {\n                props.pageNumberChange(props.selectedPageNumber - 1);\n              }\n            }}\n            className={styles.arrows}\n            icon={faChevronLeft}\n        />\n        <ul>\n          {props.pages?.map((pageNum) => {\n            return (\n                <li className={props.selectedPageNumber === pageNum ? styles.selected : \"\"} onClick={() => props.pageNumberChange(pageNum)}>{pageNum}</li>\n            );\n          })}\n        </ul>\n        <FontAwesomeIcon\n            onClick={() => {\n              if (props.selectedPageNumber < props.pages?.length) {\n                props.pageNumberChange(props.selectedPageNumber + 1);\n              }\n            }}\n            className={styles.arrows}\n            icon={faChevronRight}\n        />\n      </div>\n  );\n}\n\nexport default Pagination;\n","import React, {useEffect, useState} from \"react\";\nimport Header from \"../../base/Header\";\nimport SearchInput from \"../../atoms/SearchInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {deleteCampaign, getCampaigns, searchCampaigns} from \"../../actions/campaignActions\";\nimport ItemList from \"../../base/ItemList\";\nimport Pagination from \"../../atoms/Pagination\";\nimport styles from \"./CampaignList.module.scss\";\nimport {ModalDataType} from \"../../constants\";\n\nconst header = {\n  company: \"Company\",\n  type: \"Type\",\n  name: \"Name\",\n  actions: \"Actions\",\n};\n\nconst CampaignList = () => {\n  const dispatch = useDispatch();\n  const [pageNumber, setPageNumber] = useState(1);\n  const onPageNumberChanged = (pageNumber) => {\n    setPageNumber(pageNumber);\n  };\n  useEffect(() => {\n    dispatch(getCampaigns(pageNumber));\n  }, [dispatch, pageNumber]);\n  const searchCampaign = (event) => {\n    if (event.target?.value) {\n      dispatch(searchCampaigns(event.target.value));\n    } else {\n      dispatch(getCampaigns(pageNumber));\n    }\n  };\n  const campaigns = useSelector((state) => state.campaign);\n  const deleteAction = (pageNumber, index) => dispatch(deleteCampaign(pageNumber, index))\n  return (\n      <div className={styles.container}>\n        <Header />\n        <div className={styles.campaignContainer}>\n          <SearchInput searchCampaign={searchCampaign} totalItems={campaigns.payload?.totalItems} />\n          <ItemList\n              payload={campaigns.payload?.campaigns}\n              pageNumber={pageNumber}\n              header={header}\n              validKeys={[\"company\", \"type\", \"name\", \"actions\"]}\n              dataType={ModalDataType.CAMPAIGN}\n              deleteAction={deleteAction}\n          />\n          <Pagination\n              pageNumberChange={onPageNumberChanged}\n              pages={campaigns.payload?.pages}\n              selectedPageNumber={pageNumber}\n          />\n        </div>\n      </div>\n  );\n}\n\nexport default CampaignList;\n","const BASE_URL = \"https://reqres.in/api/\";\n\nexport default class Api {\n  static get(url) {\n    return this._xhr(BASE_URL + url, \"GET\");\n  }\n\n  static put(url, body) {\n    return this._xhr(BASE_URL + url, \"PUT\", body);\n  }\n\n  static delete(url) {\n    return this._xhr(BASE_URL + url, \"DELETE\");\n  }\n\n  static _xhr(url, method, body) {\n    return new Promise((res, rej) => {\n      fetch(url, {\n        method,\n        body\n      }).then(r => {\n        if (r.status === 204) {\n          return r;\n        }\n        return r.json()\n      }).then(r => res(r)).catch(e => rej(e));\n    })\n  }\n}\n","import Api from \"../api\";\nimport {ActionType} from \"./types\";\n\nconst setEmployees = (data, totalPages) => {\n  const pages = Array.from({length: totalPages}, (x, i) => i + 1);\n  return {\n    type: ActionType.EMPLOYEE_DETAILS,\n    payload: {\n      employees: data,\n      totalPages,\n      pages,\n    }\n  }\n}\n\nexport const getEmployees = (pageNumber) => {\n  return (dispatch) => {\n    Api.get(`users?page=${pageNumber}`)\n        .then(res => dispatch(setEmployees(res.data, res.total_pages)))\n        .catch(error => console.log(error));\n  }\n}\n\nexport const updateEmployee = (userId, updatedEmployee, updatedEmployees, totalPages) => {\n  updatedEmployees.find(employee => employee.id === userId).first_name = updatedEmployee.first_name;\n  return (dispatch) => {\n    Api.put(`users/${userId}`, updatedEmployee)\n        .then(res => dispatch(setEmployees(updatedEmployees, totalPages)))\n        .catch(error => console.log(error));\n  }\n}\n\nexport const deleteEmployee = (userId, pageNumber, updatedEmployees, totalPages) => {\n  return (dispatch) => {\n    Api.delete(`users/${userId}`)\n        .then(res => dispatch(setEmployees(updatedEmployees, totalPages)))\n        .catch(error => console.log(error))\n  };\n}\n","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Header from \"../../base/Header\";\nimport styles from \"./EmployeeList.module.scss\";\nimport ItemList from \"../../base/ItemList\";\nimport Pagination from \"../../atoms/Pagination\";\nimport {deleteEmployee, getEmployees} from \"../../actions/employeeAction\";\nimport {ModalDataType} from \"../../constants\";\n\nconst header = {\n  \"email\": \"Email\",\n  \"first_name\": \"First Name\",\n  \"last_name\": \"Last Name\",\n  \"actions\": \"Actions\"\n};\n\nconst EmployeeList = () => {\n  const [pageNumber, setPageNumber] = useState(1);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getEmployees(pageNumber));\n  }, [dispatch, pageNumber]);\n  const employees = useSelector(state => state.employee);\n  const onPageNumberChanged = (pageNumber) => {\n    setPageNumber(pageNumber);\n  };\n  const deleteAction = (pageNumber, index) => {\n    const employeeId = employees.payload?.employees[index].id;\n    const updatedEmployees = [...employees.payload?.employees];\n    updatedEmployees.splice(index, 1);\n    const pagesLength = employees.payload?.pages?.length;\n    dispatch(deleteEmployee(employeeId, pageNumber, updatedEmployees, pagesLength));\n  };\n  return (\n      <div className={styles.container}>\n        <Header />\n        <div className={styles.employeeContainer}>\n          <ItemList\n              payload={employees.payload?.employees}\n              pageNumber={pageNumber}\n              totalPages={employees.payload?.pages?.length}\n              header={header}\n              validKeys={[\"first_name\", \"last_name\", \"email\", \"actions\"]}\n              dataType={ModalDataType.EMPLOYEE}\n              deleteAction={deleteAction}\n          />\n          <Pagination\n              pageNumberChange={onPageNumberChanged}\n              pages={employees.payload?.pages}\n              selectedPageNumber={pageNumber}\n          />\n        </div>\n      </div>\n  );\n}\n\nexport default EmployeeList;\n","import React, {Fragment, useState} from \"react\";\nimport styles from \"./Modal.module.scss\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleModal} from \"../../actions/baseAction\";\nimport {updateCampaign} from \"../../actions/campaignActions\";\nimport {ModalDataType} from \"../../constants\";\nimport {updateEmployee} from \"../../actions/employeeAction\";\n\nconst Modal = (props) => {\n  const [input, setInput] = useState(props.meta?.title);\n  const dispatch = useDispatch();\n  if (props.showModal) {\n    return (\n        <div\n            role=\"button\"\n            className={styles.modalWrapper}\n            onClick={e => e.stopPropagation()}\n        >\n          <div\n              role=\"button\"\n              className={styles.modal}\n          >\n            <input className={styles.input} onChange={e => setInput(e.target.value)} defaultValue={props.meta?.title} />\n            <div className={styles.actionsContainer}>\n              <button className={styles.cancelButton} onClick={() => dispatch(toggleModal(false))}>Cancel</button>\n              <button className={styles.saveButton} onClick={() => {\n                if (props.dataType === ModalDataType.CAMPAIGN) {\n                  dispatch(updateCampaign(props.meta?.pageNumber, props.meta?.index, input));\n                } else {\n                  dispatch(updateEmployee(props.meta?.id, { first_name: input, }, props.meta?.employees, props.meta?.totalPages));\n                }\n                dispatch(toggleModal(false));\n              }}>Save</button>\n            </div>\n          </div>\n        </div>\n    );\n  }\n  return null;\n}\n\nexport default Modal;\n","import React from 'react';\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\nimport CampaignList from \"./pages/campaigns\";\nimport EmployeeList from \"./pages/employee\";\nimport Modal from \"./base/Modal\";\nimport {useSelector} from \"react-redux\";\n\nconst App = () => {\n  const base = useSelector(state => state.base);\n  return (\n      <div>\n        <Router>\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/campaign\"/>\n            <Route path=\"/campaign\" component={CampaignList}/>\n            <Route path=\"/employee\" component={EmployeeList}/>\n          </Switch>\n        </Router>\n        <Modal {...base.payload} />\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport {applyMiddleware, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducers from './reducers';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nconst store = createStore(rootReducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}